class Player
  attr_accessor :name, :role

  def initialize(name, role)
    @name = name
    @role = role
  end

  def enter_code
    puts "Enter your code. It should be 4 numbers"
    take_code = gets.chomp
    return take_code =~ /\A\s*?[0-9]{4}\s*?\Z/ ? take_code : false # user code must be four digits(numbers)
  end

  def enter_guess
    puts "Guess the code"
    guess_code = gets.chomp
    return guess_code =~ /\A\s*?[0-9]{4}\s*?\Z/ ? guess_code : false # user guess must be four digits
  end

  def computer_code
    return 4.times.map { rand(1) }.join("")# returns a string of 4 random numbers selected between 0 and 9
  end

  def computer_guess
    print "Computer's guess is:  "
    puts 4.times.map { rand(1) }.join("")
    return 4.times.map { rand(1) }.join("")
  end

end

class Display
  def ask_role(name)
    puts "======================================================="
    puts "which role do you want to play " + name + "?"
    puts "1. If you choose 'CODE MAKER', you will have to enter four numbers(0 to 9) as a code which the computer will have 10 chances to guess."
    puts "2. If you choose 'CODE BREAKER' you will have 10 chances to guess the code generated by the computer."
    puts "   NB after every guess you make, you will receive feed back on how accurate your guess was in the form of 'O' and 'X'"
    puts "where 'O' stands for a wrong guess in that position and 'X' a correct guess"
    puts "With all that said you can now select your role"
    puts "======================================================"
    print "Select 1: As code maker or 2: As code breaker "
  end

end

def produce_players_role
  choice = gets.chomp
  return choice =~ /\A\s*?[12]\s*?\Z/ ? choice : false # choice must be 1 or 2 if not raise error
end

def validate_players_role
  loop do
    role = produce_players_role
    if role == false
      puts "Enter only numbers: 1 or 2"
    else
      return role
    end
  end
end

def assign_role(role, player, name)
  if role == "1"
    code_maker = player.new("#{name}","code maker")
    code_breaker = player.new("Cpu", "code breaker")
  else
    code_maker = player.new("Cpu", "code maker")
    code_breaker = player.new("#{name}", "code breaker")
  end
  return code_maker, code_breaker # returns an array ["code maker", "code breaker"]
end

def validate_code(code_maker)
  loop do
    if code_maker.name == "Cpu"
      code = code_maker.computer_code
    else
      code = code_maker.enter_code
    end

    if code == false
      puts "Error: Wrong input!!!!!"
      puts "Enter 4 numbers only and make sure they are not spaced up"
    else
      return code # breaks out of the loop only when code is valide
    end
  end
end

# A valide  gues will be the one made up of 4 numbers only.
def validate_guess(code_breaker)
  loop do
    if code_breaker.name == "Cpu"
      guess = code_breaker.computer_guess
    else
      guess = code_breaker.enter_guess
    end

    if guess == false
      puts "Error: Wrong input!!!!!"
      puts "Enter 4 numbers only and make sure they are not spaced"
    else
      return guess # breaks out of the loop only when guess in valid
    end
  end
end

def compare_code_and_guess(code, guess, code_breaker, name)
  if code == guess and code_breaker.name == "#{name}"
     return "Congratulations!!!! #{code_breaker.name} wins the game"
  elsif code == guess and code_breaker.name == "Cpu"
    return "Sorry, you lose the game, computer guess correctly"
  end
     return "Wrong guess"
end

def feed_back(code, guess)
  i = 0
  result = ""
  while i < code.length
    if code[i] == guess[i]
      result += "X"
    else
      result += "O"
    end
    i += 1
  end
  p "Feed back |#{result}|"
end

def game
  display = Display.new
  puts "________Welcome dude Can you please enter your name_________"
  name = gets.chomp.downcase
  display.ask_role(name)
  role = validate_players_role
  code_maker = assign_role(role, Player, name)[0] # code maker is at index 0 accordign to assign_role
  code_breaker = assign_role(role, Player, name)[1] # code breaker is at index 1 according to assign role
  code = validate_code(code_maker)
  i = 1
  while i <= 10
    guess = validate_guess(code_breaker)
    puts compare_code_and_guess(code, guess, code_breaker, name)

    break if compare_code_and_guess(code, guess, code_breaker, name) ==
      "Congratulations!!!! #{name} wins the game"

    break if compare_code_and_guess(code, guess, code_breaker, name) ==
    "Sorry, you lose the game, computer guess correctly"

    feed_back(code, guess)
    i += 1
  end
  if compare_code_and_guess(code, guess, code_breaker, name) == "Wrong guess" and code_breaker.name == "Cpu"
    p "Congratulations!!! #{name} You win. Computer was unable to guess your code correctly"
  elsif compare_code_and_guess(code, guess, code_breaker, name) == "Wrong guess" and code_breaker.name == name
     p "<Sorry LOSER> You were unable to guess computer's code"
  end

end

game
